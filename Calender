import java.util.Scanner;

public class Calender {

	public static void main(String[] args) {
		Scanner console = new Scanner(System.in);
		System.out.print("Enter a date (in mm dd yyyy format): ");
		int month = console.nextInt();
		int day = console.nextInt();
		int year = console.nextInt();

		System.out.print("Enter the advance date(mm dd yyyy): ");
		int m = console.nextInt();
		int d = console.nextInt();
		int y = console.nextInt();
		if (isDateValid(month, day, year)) {

			// String season = whatSeason (month, day);
			// System.out.println("The season is " + season);
			// nextDay(month, day, year);
			int sub = advanceToDate(m, d, y, month, day, year);
			System.out.printf("\nYou were %d days old.", sub);

			String date = getDateOfWeek(month, day, year);
			System.out.println(date);
			
			String format= toString(month, day , year);
			
		} else {
			System.out.println("Date is NOT valid!");
		}
	}

	private static String toString(int month, int day, int year) {
		
		return (year+"/"+month+"/"+day);
	}

	private static String getDateOfWeek(int month, int day, int year) {
		String date = "";
		int mon = advanceToDate(month, day, year, 1, 1, 1753);
		int tue = advanceToDate(month, day, year, 1, 2, 1753);
		int wed = advanceToDate(month, day, year, 1, 3, 1753);
		int thu = advanceToDate(month, day, year, 1, 4, 1753);
		int fri = advanceToDate(month, day, year, 1, 5, 1753);
		int sat = advanceToDate(month, day, year, 1, 6, 1753);
		int sun = advanceToDate(month, day, year, 1, 7, 1753);

		if ((mon / 7.0) == (mon / 7)) {
			date = "Monday";
		} else if ((tue / 7.0) == (tue / 7)) {
			date = "Tuesday";
		} else if ((wed / 7.0) == (wed / 7)) {
			date = "Wednesday";
		} else if ((thu / 7.0) == (thu / 7)) {
			date = "Thursday";
		} else if ((fri / 7.0) == (fri / 7)) {
			date = "Friday";
		} else if ((sat / 7.0) == (sat / 7)) {
			date = "Saturday";
		} else if ((sun / 7.0) == (sun / 7)) {
			date = "Sunday";
		}
		return date;
	}

	private static int advanceToDate(int m, int d, int y, int month, int day, int year) {
		//m is advance month
		//d is advance day
		//y is advance year
		

		int sub = 0;
		int leap = 0;
		int month30 = 0;
		int month31 = 0;
		int feb = 0;

		for (int i = year; i < y; i++) {
			if (isLeap(i)) {
				leap++;
			}
		}
		if (month < m) {
			for (int i = month; i < m; i++) {
				if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12) {
					month31++;
				} else if (i == 4 || i == 6 || i == 9 || i == 11) {
					month30++;
				} else {
					feb++;
				}

			}

			if (isLeap(y)) {
				sub = (d - day) + (month30 * 30) + (month31 * 31) + (feb * 29) + ((y - year - leap) * 365)
						+ (leap * 366);
			} else {
				sub = (d - day) + (month30 * 30) + (month31 * 31) + (feb * 28) + ((y - year - leap) * 365)
						+ (leap * 366);
			}
		} else if (month > m) {
			for (int i = m; i < (Math.abs(m - month) + m); i++) {
				if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12) {
					month31++;
				} else if (i == 4 || i == 6 || i == 9 || i == 11) {
					month30++;

				} else {
					feb++;
				}
			}
			if (isLeap(y)) {
				sub = (d - day) - ((month30 * 30) + (month31 * 31) + (feb * 29)) + ((y - year - leap) * 365)
						+ (leap * 366);
			} else {
				sub = (d - day) - ((month30 * 30) + (month31 * 31) + (feb * 28)) + ((y - year - leap) * 365)
						+ (leap * 366);
			}
		} else {
			if (isLeap(y)) {
				sub = (d - day) + ((y - year - leap) * 365) + (leap * 366);
			} else {
				sub = (d - day) + ((y - year - leap) * 365) + (leap * 366);
			}
		}

		return sub;
	}

	private static void nextDay(int month, int day, int year) {
		int Nd = day;
		int Nm = month;
		int Ny = year;
		if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {
			if (month < 12) {
				if (day < 31) {
					Nd++;
				} else if (day == 31) {
					Nd = 1;
					Nm++;
				}
			} else if (month == 12) {
				if (day < 31) {
					Nd++;
					Nm = 1;
					Ny++;
				} else if (day == 31) {
					Nd = 1;
					Nm = 1;
					Ny++;
				}
			}
		} else if (month == 4 || month == 6 || month == 9 || month == 11) {
			if (day < 30) {
				Nd++;
			} else if (day == 30) {
				Nd = 1;
				Nm++;
			}
		} else {// feb
			if (day < 29) {
				Nd++;
			} else if (day == 29) {
				Nd = 1;
				Nm++;
			}
		}
		System.out.printf("The next date after %d %d, %d is %d %d, %d", month, day, year, Nm, Nd, Ny);
	}

	public static boolean isDateValid(int month, int day, int year) {
		if (year >= 0) {
			if (month >= 1) {
				if (month <= 12) {
					if (day >= 1) {
						if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10
								|| month == 12) {
							if (day <= 31) {
								return true;
							} else {
								return false;
							}
						} else if (month == 4 || month == 6 || month == 9 || month == 11) {
							if (day <= 30) {
								return true;
							} else {
								return false;
							}
						} else {// feb
							if (isLeap(year)) {
								if (day <= 29)
									return true;
								else
									return false;
							} else {
								if (day <= 28)
									return true;
								else
									return false;
							}
						}
					} else {
						return false;
					}
				} else {
					return false;
				}
			} else {
				return false;
			}
		} else {
			return false;
		}
	}

	private static String whatSeason(int month, int day) {
		String result = "";
		if (month == 10)
			result = "Fall";
		else if (month == 11)
			result = "Fall";
		else if (month == 1)
			result = "Winter";
		else if (month == 2)
			result = "Winter";
		else if (month == 4)
			result = "Spring";
		else if (month == 5)
			result = "Spring";
		else if (month == 7)
			result = "Summer";
		else if (month == 8)
			result = "Summer";
		else if (month == 12) {
			if (day <= 20)
				result = "Fall";
			else
				result = "Winter";
		} else if (month == 9) {
			if (day <= 21)
				result = "Summer";
			else
				result = "Fall";
		} else if (month == 3) {
			if (day <= 19)
				result = "Winter";
			else
				result = "Spring";
		} else if (month == 6) {
			if (day <= 19)
				result = "Spring";
			else
				result = "Summer";
		}
		return result;
	}

	// this method return true if the year is a leap year, false otherwise
	private static boolean isLeap(int year) {
		if (year % 4 == 0) {// it fully div by 4
			if (year % 100 == 0) {// div by 4 and 100
				if (year % 400 == 0) {// div by 4, 100 and 400
					return true;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
}
